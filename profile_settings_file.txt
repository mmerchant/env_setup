# Set VI operating mode for terminal
set -o vi

export HOMEBREW_GITHUB_API_TOKEN=''

export PGHOST=/tmp

# Set unlimited history
export HISTSIZE=""

# Don't put duplicate lines or lines starting with space in the history.
export HISTCONTROL=ignoreboth

# Append to history, don't overwrite it
shopt -s histappend

# Format
# user@host [Mon Dec 28 12:20 PM]  ~
# <1>:
export PS1='\n\[\033[01;31m\]\u@\h\[\033[01;36m\] [\d \@] \[\033[01;33m\] \w\n\[\033[00m\]<\#>:'
export PS2="\[\033[1m\]> \[\033[0m\]"

# Get Redshift host, username and password.
if [ -f $HOME/.pgpass ]
then
    rs_host=`cat .pgpass | grep -m 1 -i "flowroute.cekzffdqrcts.us-west-2.redshift.amazonaws.com.*$USER" | tail -1 | cut -d : -f 1`
    rs_user=`cat .pgpass | grep -m 1 -i "flowroute.cekzffdqrcts.us-west-2.redshift.amazonaws.com.*$USER" | tail -1 | cut -d : -f 4`
    rs_pass=`cat .pgpass | grep -m 1 -i "flowroute.cekzffdqrcts.us-west-2.redshift.amazonaws.com.*$USER" | tail -1 | cut -d : -f 5`
    export REDSHIFT_CONNECTION_STRING="user=$rs_user password=$rs_pass host=$rs_host port=5439 dbname=dev"
fi

# PIP Stuff
export PIP_ACCESS_KEY=
export PIP_SECRET_KEY=

# Path
export PATH=/usr/include/i386:/usr/local/bin:/usr/local/sbin:/usr/local/opt/ruby/bin:$PATH

# Frick alias (the magical interpreter
alias frick='$(thefuck $(fc -ln -1))'
alias FRICK='frick'

# Lazy git alias
alias gitit='git pull --rebase'

# iPython notebook starter alias
alias pynb="ipython notebook --notebook-dir='$HOME/Dropbox (Personal)/_scripts/_iPython_Notebooks'"

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
    else
    color_prompt=
    fi
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
